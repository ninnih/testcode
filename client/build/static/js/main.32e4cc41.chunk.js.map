{"version":3,"sources":["components/AddNew/AddNew.tsx","components/Header/Header.tsx","js/constants/index.ts","components/Card/Card.tsx","js/actions/index.ts","components/Board/Board.tsx","modules/Home/Home.tsx","modules/MainRoutes/MainRoutes.tsx","components/Button/Button.tsx","components/InputModal/Task/Task.tsx","components/InputModal/InputModal.tsx","App.tsx","js/reducers/reminderReducer.ts","js/reducers/index.ts","js/store/index.ts","index.tsx"],"names":["AddNew","Tooltip","title","placement","Header","openModal","className","onClick","ADD_REMINDER","EDIT_TASK","Card","tasks","dispatch","id","useDispatch","useState","edit","setEdit","editableTask","e","target","useEffect","type","payload","name","map","task","value","Board","cards","useSelector","state","reminders","results","length","card","i","Home","MainRoutes","exact","path","render","Button","Task","handleChange","input","key","placeholder","onChange","InputModal","done","owner","urgent","error","setInput","setTasks","taskArr","Array","from","document","getElementsByName","push","uuidv4","action","onSubmit","preventDefault","stopPropagation","htmlFor","prevCount","socket","require","io","App","modal","setModal","console","log","initialState","data","loading","all","reminderReducer","content","Object","assign","newObj","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","subscribe","getState","ReactDOM","getElementById"],"mappings":"0TAkBeA,EARA,WACd,OACE,cAACC,EAAA,EAAD,CAASC,MAAM,sBAAsBC,UAAU,SAA/C,SACC,cAAC,IAAD,OCmBWC,EAnBW,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAC5B,OACC,mCACC,yBAASC,UAAU,uBAAnB,SACC,wBAAQC,QAASF,EAAjB,SACC,cAAC,EAAD,QAGF,0BAASC,UAAU,sBAAnB,UACC,8CACA,wDAED,yBAASA,UAAU,kBAAnB,SACC,cAAC,IAAD,U,eC1BSE,G,OAAe,gBACfC,EAAY,YC8EVC,G,OA5DS,SAAC,GAA0B,IAAxBR,EAAuB,EAAvBA,MAAOS,EAAgB,EAAhBA,MAC3BC,GAD2C,EAATC,GACvBC,eADgC,EAGzBC,mBAAgB,CACvCC,MAAM,EACNH,GAAI,KAL4C,mBAG1CG,EAH0C,KAGpCC,EAHoC,KAQ3CC,EAAe,SAACC,GACpBF,EAAQ,CACPD,MAAOA,EAAKA,KACZH,GAAIM,EAAEC,OAAOP,MAQhB,OAJCQ,qBAAU,WACVT,ECtBO,CACLU,KAAMb,EACNc,QDoBgBP,MAChB,CAACA,EAAMJ,IAGT,0BAASN,UAAU,OAAnB,UACC,0BAASA,UAAU,eAAnB,UACC,kCACC,6BAAKJ,MAEN,kCACC,uBAAOoB,KAAK,WAAWE,KAAK,GAAGX,GAAG,UAGpC,yBAASP,UAAU,aAAnB,SACC,kCACC,6BACEK,EAAMc,KAAI,SAAAC,GAAI,OACbA,EAAKV,KAQH,qCAAE,uBACHM,KAAK,OACLK,MAAOD,EAAKA,OAEZ,oBACAnB,QAAS,SAACY,GAAD,OAAOD,EAAaC,IAC7BN,GAAIa,EAAKb,GAFT,sBAXF,6BACC,oBACCN,QAAS,SAACY,GAAD,OAAOD,EAAaC,IAC7BN,GAAIa,EAAKb,GAFV,SAGGa,EAAKA,kBAeb,yBAASpB,UAAU,sBE3CPsB,EAtBG,WACjB,IAAMC,EAAQC,aAAY,SAACC,GAAD,OAAsBA,EAAMC,UAAUC,WAEhE,OACC,yBAAS3B,UAAU,QAAnB,SACC,yBAASA,UAAU,iBAAnB,SACmB,IAAjBuB,EAAMK,OAAe,KACpB,mCACDL,EAAMJ,KAAI,SAACU,EAAWC,GAAZ,OACV,cAAC,EAAD,CACClC,MAAOiC,EAAKjC,MACZS,MAAOwB,EAAKxB,MACZE,GAAIsB,EAAKtB,eCJAwB,EAXF,WAEZ,OACC,+BACC,cAAC,EAAD,OCOYC,EAVI,WAEjB,OACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAAM,cAAC,EAAD,U,yCCO3BC,G,OARA,SAAC,GAAmC,IAAjCpB,EAAgC,EAAhCA,KAAMK,EAA0B,EAA1BA,MACvB,OACC,wBAAQrB,UAAS,yBAAoBgB,GAArC,SACC,6BAAKK,Q,iBCgBOgB,EAjBS,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,MAAOhC,EAAc,EAAdA,GAAIiC,EAAU,EAAVA,IACnD,OACC,oCACC,yCACA,uBACCxB,KAAK,OACLK,MAAOkB,EAAM3C,MAAMyB,MACnBrB,UAAS,qBAAgBwC,GACzBjC,GAAIA,EACJW,KAAK,OACLuB,YAAY,aACZC,SAAUJ,Q,iBC8HCK,EAxHe,SAAC,GAAmB,IAAjB5C,EAAgB,EAAhBA,UAC1BO,EAAWE,cAD+B,EAGtBC,mBAAgB,CACzCb,MAAO,GACPgD,MAAM,EACNC,MAAO,GACPxC,MAAO,CAAC,IACRyC,QAAQ,EACRC,MAAO,GACPxC,GAAI,GACJG,MAAM,IAXyC,mBAGzC6B,EAHyC,KAGlCS,EAHkC,OActBvC,mBAAiB,GAdK,mBAczCJ,EAdyC,KAclC4C,EAdkC,KAsB1CX,EAAe,SAACzB,GAA4C,IAAD,EAC1DqC,EAAe,GACRC,MAAMC,KAAKC,SAASC,kBAAkB,SAE5CnC,KAAI,SAACC,GAAe,IAAD,EACzB8B,EAAQK,MAAR,mBACEnC,EAAKb,GAAKa,EAAKC,OADjB,sBAEO,GAFP,mBAGKmC,eAHL,sBAIO,GAJP,OAQDR,EAAS,2BACLT,GADI,OAEPlC,MAAO6C,EACPN,MAAM,EACNC,MAAO,WAJA,cAKNhC,EAAEC,OAAOP,GAAKM,EAAEC,OAAOO,OALjB,wBAMC,GAND,mBAOHmC,eAPG,sBAQD,GARC,MA8BT,OACC,0BAASxD,UAAU,aAAnB,UACC,yBACCA,UAAU,WACVC,QAAS,SAACY,GACTd,EAAUc,MAEZ,uBACC4C,OAAO,GACPzD,UAAU,YACV0D,SA5BkB,SAAC7C,GACrBA,EAAE8C,iBACiB,KAAhBpB,EAAM3C,MACRoD,EAAS,2BACLT,GADI,IAEP3C,MAAO,GACPmD,MAAO,2BAGRzC,EN7EM,CACHU,KAAMd,EACNe,QM2EkBsB,IACrBS,EAAS,2BACLT,GADI,IAEP3C,MAAO,GACPmD,MAAO,QAYR,UAIC,kCACE,yBAAS/C,UAAU,cAAnB,SACC,wBAAQC,QAAS,SAACY,GACjBd,EAAUc,GACVA,EAAE+C,mBAFH,SAIC,cAAC,IAAD,UAIJ,oCACC,oCACC,uBAAOC,QAAQ,YAAf,mBACA,uBACC7C,KAAK,OACLT,GAAG,QACHc,MAAOkB,EAAM3C,MACb6C,YAAY,cACZC,SAAUJ,OAGZ,YAAIa,MAAM9C,IAAQc,KAAI,SAACN,EAAGiB,GAAJ,OACrB,cAAC,EAAD,CACAd,KAAK,OACLT,GAAG,OACH+B,aAAcA,EACdC,MAAOA,GACFT,MACN,kCACC,cAACnC,EAAA,EAAD,CAASC,MAAM,mBAAmBC,UAAU,OAA5C,SACC,wBAAQI,QA1FY,SAACY,GAC1BA,EAAE8C,iBACF9C,EAAE+C,kBACFX,GAAS,SAAAa,GAAS,OAAIA,EAAY,MAuF7B,SACC,cAAC,IAAD,UAIH,kCACC,cAAC,EAAD,CAAQ9C,KAAK,SAASK,MAAM,gCCnI5B0C,EADKC,EAAQ,IACJC,CAAG,yBAsBHC,EApBC,WAAO,IAAD,EACMzD,oBAAyB,GAD/B,mBACb0D,EADa,KACNC,EADM,KAEpBC,QAAQC,IAAIP,GACZ,IAAMhE,EAAY,SAACc,GACjBA,EAAE8C,iBACF9C,EAAE+C,kBAEwBQ,GAAzBD,GACDE,QAAQC,IAAIzD,IAGd,OACE,0BAASb,UAAU,cAAnB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAQD,UAAWA,IAClBoE,EAAQ,cAAC,EAAD,CAAYpE,UAAWA,IAAe,S,wBCd/CwE,EAA8B,CACnCC,KAAM,KACNC,SAAS,EACR1B,MAAO,GACP2B,IAAK,GACL/C,QAAS,IAsCIgD,EAnCS,WAAoD,IAAnDlD,EAAkD,uDAA1C8C,EAAcd,EAA4B,uCACrExC,EAAUwC,EAAOxC,QAEtB,OAAQwC,EAAOzC,MACd,KAAKd,EAEJ,OAAO,2BACCuB,GADR,IAEKiD,IAAKzD,EACLU,QAAQ,GAAD,mBAAMF,EAAME,SAAZ,CAAqBV,IAC5BwD,SAAS,IAGb,KAAKtE,EACH,IAAIyE,EAAUC,OAAOC,OAAO,GAAIrD,GAUhC,OARAmD,EAAQF,IAAIrE,MAAQuE,EAAQF,IAAIrE,MAAMc,KAAI,SAACC,GACzC,IAAM2D,EAAM,eAAO3D,GAInB,OAHG2D,EAAOxE,KAAOU,EAAQV,KACvBwE,EAAOrE,KAAOO,EAAQP,MAEjBqE,KAGF,2BACJtD,GADH,IAEAE,QAAS,CAACiD,EAAQF,KAClBA,IAAI,eAAKjD,EAAMiD,OAGjB,QACD,OAAOjD,IC/CGuD,EAAcC,YAAgB,CACzCvD,UAAWiD,ICAPO,EAAQC,YAAYH,EAAaI,YAAgBC,MAEvDH,EAAMI,WAAU,WACdJ,EAAMK,cAGOL,QCDfM,IAASrD,OACP,cAAC,IAAD,CAAU+C,MAAOA,EAAjB,SACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJ7B,SAASoC,eAAe,U","file":"static/js/main.32e4cc41.chunk.js","sourcesContent":["import React from 'react'\r\nimport './AddNew.scss';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport { Tooltip } from '@material-ui/core';\r\n\r\n// type AddNewProps = {\r\n// \ttype: string,\r\n// \tvalue: string\r\n// }\r\n\r\nconst AddNew = () => {\r\n\treturn (\r\n\t\t\t<Tooltip title=\"Create new reminder\" placement=\"bottom\">\r\n\t\t\t\t<AddBoxIcon />\r\n\t\t\t</Tooltip>\r\n\t)\r\n}\r\n\r\nexport default AddNew;\r\n","import React, { FC } from 'react';\r\n\r\nimport './Header.scss';\r\n\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { Tooltip } from '@material-ui/core';\r\nimport AddNew from '../AddNew/AddNew';\r\n\r\ninterface Props {\r\n\topenModal: (e: any) => void;\r\n}\r\n\r\nconst Header: FC<Props> = ({ openModal }) => {\r\n\treturn (\r\n\t\t<header>\r\n\t\t\t<section className=\"item item--createnew\">\r\n\t\t\t\t<button onClick={openModal}>\r\n\t\t\t\t\t<AddNew />\r\n\t\t\t\t</button>\r\n\t\t\t</section>\r\n\t\t\t<section className=\"item item--identity\">\r\n\t\t\t\t<h2>Reminder App</h2>\r\n\t\t\t\t<p>By Ninni Hagstr√∂m</p>\r\n\t\t\t</section>\r\n\t\t\t<section className=\"item item--menu\">\r\n\t\t\t\t<MenuIcon />\r\n\t\t\t</section>\r\n\t\t</header>\r\n\t)\r\n}\r\n\r\nexport default Header","export const ADD_REMINDER = 'ADD_REMINDER';\r\nexport const EDIT_TASK = 'EDIT_TASK';\r\n","import React, { FC, useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { editTask } from '../../js/actions/index'\r\nimport './Card.scss';\r\nimport { RootState } from '../../js/reducers/index';\r\n\r\ninterface Props {\r\n\ttitle: string,\r\n\ttasks: [\r\n\t\ttitle: any\r\n\t],\r\n\tid: string\r\n}\r\n\r\ninterface Tasks {\r\n\tedit: boolean,\r\n\tid: string\r\n}\r\n\r\nconst Card: FC<Props> = ({ title, tasks, id }) => {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst [edit, setEdit] = useState<Tasks>({\r\n\t\tedit: false,\r\n\t\tid: '',\r\n\t})\r\n\r\n\tconst editableTask = (e: any) => {\r\n\t\t\tsetEdit({\r\n\t\t\t\tedit: !edit.edit,\r\n\t\t\t\tid: e.target.id,\r\n\t\t\t})\r\n\t}\r\n\t\r\n  useEffect(() => {\r\n\t\tdispatch(editTask(edit))\r\n  },[edit, dispatch])\r\n\r\n\treturn (\r\n\t\t<article className=\"card\">\r\n\t\t\t<section className=\"card__header\">\r\n\t\t\t\t<section>\r\n\t\t\t\t\t<h3>{title}</h3>\r\n\t\t\t\t</section>\r\n\t\t\t\t<section>\r\n\t\t\t\t\t<input type=\"checkbox\" name=\"\" id=\"\"/>\r\n\t\t\t\t</section>\r\n\t\t\t</section>\r\n\t\t\t<section className=\"card__body\">\r\n\t\t\t\t<article>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t{tasks.map(task => (\r\n\t\t\t\t\t\t\t!task.edit ?\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<h4 \r\n\t\t\t\t\t\t\t\t\tonClick={(e) => editableTask(e)}\r\n\t\t\t\t\t\t\t\t\tid={task.id}>\r\n\t\t\t\t\t\t\t\t\t\t{task.task}\r\n\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t: <><input \r\n\t\t\t\t\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\t\t\t\t\tvalue={task.task}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<h2\r\n\t\t\t\t\t\t\t\t\tonClick={(e) => editableTask(e)}\r\n\t\t\t\t\t\t\t\t\tid={task.id}>close</h2>\r\n\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</article>\r\n\t\t\t</section>\r\n\t\t\t<section className=\"card__footer\">\r\n\r\n\t\t\t</section>\r\n\t\t</article>\r\n\t)\r\n}\r\n\r\nexport default Card;","import { \r\n  ADD_REMINDER,\r\n  EDIT_TASK\r\n} from '../constants/index';\r\n\r\nexport const addReminder = (payload: Object) => {\r\n  return {\r\n      type: ADD_REMINDER,\r\n      payload\r\n  }\r\n}\r\n\r\nexport const editTask = (payload: Object) => {\r\n  return {\r\n    type: EDIT_TASK,\r\n    payload\r\n  }\r\n}\r\n","import React, { FC, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { RootState } from '../../js/reducers/index';\r\n\r\nimport './Board.scss';\r\nimport Card from '../Card/Card';\r\n\r\nconst Board: FC = () => {\r\n\tconst cards = useSelector((state: RootState) => state.reminders.results)\r\n\r\n\treturn (\r\n\t\t<section className=\"board\">\r\n\t\t\t<section className=\"board__wrapper\">\r\n\t\t\t\t{cards.length === 0 ? null \r\n\t\t\t\t: <>\r\n\t\t\t\t{cards.map((card: any, i: number) => (\r\n\t\t\t\t\t<Card\r\n\t\t\t\t\t\ttitle={card.title}\r\n\t\t\t\t\t\ttasks={card.tasks}\r\n\t\t\t\t\t\tid={card.id}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t\t</>\r\n\t\t\t\t}\r\n\t\t\t</section>\r\n\t\t</section>\r\n\t)\r\n}\r\n\r\nexport default Board;\r\n","import Button from '../../components/Button/Button'\r\nimport React, { useState } from 'react'\r\nimport Board from '../../components/Board/Board';\r\n\r\nconst Home = () => {\r\n\r\n\treturn (\r\n\t\t<main>\r\n\t\t\t<Board />\r\n\t\t\t{/* <Button type=\"click\" value=\"me\"/>\r\n\t\t\t<Button type=\"another\" value=\"Diffferent\" /> */}\r\n\t\t</main>\r\n\t)\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport Home from '../Home/Home';\r\n\r\nconst MainRoutes = () => {\r\n\r\n  return (\r\n    <Switch> \r\n      <Route exact path='/' render={() => <Home/>}></Route>\r\n\t\t\t{/* <Route exact path='/projects' render={(props) => <Home {...props} />}></Route> */}\r\n\t\t</Switch>\r\n  );\r\n}\r\n\r\nexport default MainRoutes;","import React from 'react'\r\nimport './Button.scss';\r\n\r\ntype ButtonProps = {\r\n\ttype: string,\r\n\tvalue: string\r\n}\r\n\r\nconst Button = ({ type, value }: ButtonProps ) => {\r\n\treturn (\r\n\t\t<button className={`button button--${type}`}>\r\n\t\t\t<h4>{value}</h4>\r\n\t\t</button>\r\n\t)\r\n}\r\n\r\nexport default Button;\r\n","import React, { FC } from 'react'\r\n\r\ninterface Props {\r\n\ttype: string,\r\n\tid: string,\r\n\thandleChange: (e: any) => void,\r\n\tinput: any,\r\n\tkey: number,\r\n}\r\n\r\nconst Task: FC<Props> = ({ handleChange, input, id, key }) => {\r\n\treturn (\r\n\t\t<article>\r\n\t\t\t<label>Task</label>\r\n\t\t\t<input \r\n\t\t\t\ttype=\"text\" \r\n\t\t\t\tvalue={input.title.value} \r\n\t\t\t\tclassName={`textfield--${key}`}\r\n\t\t\t\tid={id}\r\n\t\t\t\tname=\"task\"\r\n\t\t\t\tplaceholder=\"Enter task\" \r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t\t/>\r\n\t\t</article>\r\n\t)\r\n}\r\n\r\nexport default Task\r\n","import React, { FC, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { addReminder } from '../../js/actions/index'\r\nimport './InputModal.scss';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport Button from '../Button/Button'\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport Task from './Task/Task';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { Tooltip } from '@material-ui/core';\r\n\r\ninterface Props {\r\n\topenModal: (e: any) => void;\r\n}\r\n\r\ninterface Input { \r\n\tdone: boolean,\r\n\ttitle: string,\r\n\towner: string,\r\n\ttasks: Array<any>,\r\n\turgent: boolean,\r\n\terror: string,\r\n\tid: string,\r\n\tedit: boolean\r\n}\r\n\r\nconst InputModal: FC<Props> = ({ openModal }) => {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst [input, setInput] = useState<Input>({\r\n\t\ttitle: '',\r\n\t\tdone: false,\r\n\t\towner: '',\r\n\t\ttasks: [{}],\r\n\t\turgent: false,\r\n\t\terror: '',\r\n\t\tid: '',\r\n\t\tedit: false\r\n\t})\r\n\t\r\n\tconst [tasks, setTasks] = useState<number>(1)\r\n\r\n\tconst addTaskInputField = (e: any) => {\r\n\t\te.preventDefault()\r\n\t\te.stopPropagation()\r\n\t\tsetTasks(prevCount => prevCount + 1)\r\n\t}\r\n\r\n\tconst handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tconst taskArr: any = [];\r\n\t\tlet target = Array.from(document.getElementsByName('task'));\r\n\r\n\t\ttarget.map((task: any) => {\r\n\t\t\ttaskArr.push({\r\n\t\t\t\t[task.id]: task.value,\r\n\t\t\t\tdone: false,\r\n\t\t\t\tid: uuidv4(),\r\n\t\t\t\tedit: false\r\n\t\t\t})\r\n\t\t})\r\n\r\n\t\tsetInput({\r\n\t\t\t...input,\r\n\t\t\ttasks: taskArr,\r\n\t\t\tdone: false,\r\n\t\t\towner: 'example',\r\n\t\t\t[e.target.id]: e.target.value,\r\n\t\t\turgent: false,\r\n\t\t\tid: uuidv4(),\r\n\t\t\tedit: false\r\n\t\t})\r\n\t}\r\n\r\n\tconst handleSubmit = (e: React.FormEvent) => {\r\n\t\te.preventDefault()\r\n\t\tif(input.title === '') {\r\n\t\t\tsetInput({\r\n\t\t\t\t...input,\r\n\t\t\t\ttitle: '',\r\n\t\t\t\terror: 'Please enter a task!'\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tdispatch(addReminder(input))\r\n\t\t\tsetInput({\r\n\t\t\t\t...input,\r\n\t\t\t\ttitle: '',\r\n\t\t\t\terror: ''\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<section className=\"inputmodal\">\r\n\t\t\t<section \r\n\t\t\t\tclassName=\"underlay\"\r\n\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\topenModal(e)\r\n\t\t\t\t\t}}></section>\r\n\t\t\t<form \r\n\t\t\t\taction=\"\" \r\n\t\t\t\tclassName=\"inputform\"\r\n\t\t\t\tonSubmit={handleSubmit}>\r\n\t\t\t\t<section>\r\n\t\t\t\t\t\t<article className=\"closebutton\">\r\n\t\t\t\t\t\t\t<button onClick={(e) => {\r\n\t\t\t\t\t\t\t\topenModal(e)\r\n\t\t\t\t\t\t\t\te.stopPropagation()\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<CancelIcon/>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</article>\r\n\t\t\t\t</section>\r\n\t\t\t\t<section>\r\n\t\t\t\t\t<article>\r\n\t\t\t\t\t\t<label htmlFor=\"tasktitle\">Title</label>\r\n\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tid=\"title\"\r\n\t\t\t\t\t\t\tvalue={input.title}\r\n\t\t\t\t\t\t\tplaceholder=\"Add a title\"\r\n\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t></input>\r\n\t\t\t\t\t</article>\r\n\t\t\t\t{[...Array(tasks)].map((e, i) => \r\n\t\t\t\t\t(<Task \r\n\t\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\t\tid=\"task\"\r\n\t\t\t\t\t\thandleChange={handleChange}\r\n\t\t\t\t\t\tinput={input}\r\n\t\t\t\t\t\tkey={i}/>))}\r\n\t\t\t\t\t<article>\r\n\t\t\t\t\t\t<Tooltip title=\"Add another task\" placement=\"left\">\r\n\t\t\t\t\t\t\t<button onClick={addTaskInputField}>\r\n\t\t\t\t\t\t\t\t<AddIcon/>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t</article>\r\n\t\t\t\t\t<article>\r\n\t\t\t\t\t\t<Button type=\"submit\" value=\"Create reminder\"/>\r\n\t\t\t\t\t</article>\r\n\t\t\t\t</section>\r\n\t\t\t</form>\r\n\t\t</section>\r\n\t)\r\n}\r\n\r\nexport default InputModal;\r\n","import React, { useState, useEffect, FC } from 'react';\r\n\r\nimport './App.scss';\r\nimport Header from './components/Header/Header';\r\nimport MainRoutes from './modules/MainRoutes/MainRoutes';\r\nimport InputModal from './components/InputModal/InputModal';\r\n// import {io} from \"socket.io-client\";\r\nconst io = require('socket.io-client');\r\nconst socket = io('http://localhost:8000');\r\n\r\nconst App: FC = () => {\r\n  const [modal, setModal] = useState<boolean | null>(false);\r\n  console.log(socket)\r\n  const openModal = (e: any) => {\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n\r\n    !modal ? setModal(true) : setModal(false)\r\n    console.log(e)\r\n  }\r\n  \r\n  return (\r\n    <section className=\"mainwrapper\">\r\n      <MainRoutes/>\r\n      <Header openModal={openModal}/>\r\n      {modal ? <InputModal openModal={openModal}/> : null}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { \r\n  ReminderState, \r\n  ReminderActions \r\n} from './../types/index';\r\n\r\nimport { \r\n  ADD_REMINDER,\r\n  EDIT_TASK\r\n} from '../constants/index';\r\n\r\n\r\nconst initialState: ReminderState = {\r\n\tdata: null,\r\n\tloading: false,\r\n  error: '',\r\n  all: [],\r\n  results: [],\r\n};\r\n\r\nconst reminderReducer = (state = initialState, action: ReminderActions) => {\r\nconst payload = action.payload;\r\n\r\n\tswitch (action.type) {\r\n\t\tcase ADD_REMINDER:\r\n\r\n\t\t\treturn {\r\n        ...state, \r\n        all: payload,\r\n        results: [...state.results, payload],\r\n        loading: false\r\n      }\r\n    \r\n    case EDIT_TASK:\r\n      let content = Object.assign({}, state);\r\n\r\n      content.all.tasks = content.all.tasks.map((task: any) => {\r\n        const newObj = {...task};\r\n        if(newObj.id === payload.id) {\r\n          newObj.edit = payload.edit\r\n        }\r\n        return newObj\r\n      })\r\n\r\n      return {\r\n      ...state,\r\n      results: [content.all],\r\n      all: {...state.all}\r\n    }\r\n\r\n    default:\r\n\t\t\treturn state;\r\n  }\r\n}\r\n\r\nexport default reminderReducer;\r\n","import { combineReducers } from 'redux';\r\nimport reminderReducer from './reminderReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n  reminders: reminderReducer\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>","import { applyMiddleware, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from '../reducers/index';\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nstore.subscribe(() => {\r\n  store.getState()\r\n})\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './js/store/index';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}